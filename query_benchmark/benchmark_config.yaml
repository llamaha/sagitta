global_settings:
  cli_path: "vectordb-cli" # Assumes it's in PATH or specify full path
  results_limit: 3

repositories:
  - name: "ripgrep-rust"
    url: "https://github.com/BurntSushi/ripgrep"
    language: "rust"
    default_branch: "master"
    queries:
      - text: "how does ripgrep handle large regex patterns?"
        lang: "rust"
      - text: "regex size limit"
        lang: "rust"
      - text: "Searcher struct"
        type: "struct"
        lang: "rust"

  - name: "rustbook-markdown"
    url: "https://github.com/rust-lang/book"
    language: "markdown"
    queries:
      - text: "what's the best way to handle errors in Rust?"
        lang: "markdown"
      - text: "custom error types"
        lang: "markdown"
      - text: "implementing Error trait"
        type: "code_block"
        lang: "markdown"

  - name: "flask-python"
    url: "https://github.com/pallets/flask"
    language: "python"
    queries:
      - text: "how do Flask blueprints work?"
        lang: "python"
      - text: "Blueprint class definition"
        type: "class"
        lang: "python"
      - text: "register_blueprint method"
        lang: "python"

  - name: "gin-go"
    url: "https://github.com/gin-gonic/gin"
    language: "go"
    default_branch: "master"
    queries:
      - text: "how to write custom middleware in Gin?"
        lang: "go"
      - text: "Engine struct"
        type: "struct"
        lang: "go"
      - text: "RouterGroup interface"
        lang: "go"

  - name: "tsnode-typescript"
    url: "https://github.com/microsoft/TypeScript-Node-Starter"
    language: "typescript"
    default_branch: "master"
    queries:
      - text: "how is authentication implemented in this TypeScript starter?"
        lang: "typescript"
      - text: "User interface definition"
        type: "interface"
        lang: "typescript"
      - text: "AuthController class"
        type: "class"
        lang: "typescript"

  - name: "tsnode-javascript" # Using the same repo for JS examples
    url: "https://github.com/microsoft/TypeScript-Node-Starter"
    language: "javascript"
    default_branch: "master"
    queries:
      - text: "express route handlers"
        lang: "javascript"
      - text: "app.use middleware chain"
        type: "function"
        lang: "javascript"
      - text: "router.get implementation"
        type: "function"
        lang: "javascript"

  - name: "sinatra-ruby"
    url: "https://github.com/sinatra/sinatra"
    language: "ruby"
    queries:
      - text: "how to define a route in Sinatra"
        lang: "ruby"
      - text: "Sinatra::Base class"
        type: "class"
        lang: "ruby"
      - text: "params handling in Sinatra"
        type: "method"
        lang: "ruby"

  - name: "rustbook-yaml"
    url: "https://github.com/rust-lang/book"
    language: "yaml"
    queries:
      - text: "GitHub Actions workflow configuration"
        lang: "yaml"
      - text: "build matrix definition"
        type: "mapping"
        lang: "yaml"
      - text: "workflow triggers"
        type: "mapping"
        lang: "yaml"
  
  - name: "mdn-html"
    url: "https://github.com/mdn/learning-area"
    language: "html"
    queries:
      - text: "basic structure of an HTML document"
        lang: "html"
      - text: "form input types"
        type: "tag"
        lang: "html"
      - text: "canvas element usage"
        lang: "html"

  - name: "rustbook-fallback" # Testing fallback with the Rust book
    url: "https://github.com/rust-lang/book"
    language: "plaintext" # Indicates the intent to test generic text handling
    queries:
      - text: "Permission is hereby granted, free of charge"
      - text: "To the extent possible under law"
      - text: "Foreword by" 