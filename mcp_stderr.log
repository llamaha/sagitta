Wrapper script running...
Set LD_LIBRARY_PATH=/home/adam/repos/vectordb-cli/target/release/lib:/usr/local/cuda-12.8/lib64::/home/adam/Downloads/squashfs-root/usr/lib/:/home/adam/Downloads/squashfs-root/usr/lib32/:/home/adam/Downloads/squashfs-root/usr/lib64/:/home/adam/Downloads/squashfs-root/lib/:/home/adam/Downloads/squashfs-root/lib/i386-linux-gnu/:/home/adam/Downloads/squashfs-root/lib/x86_64-linux-gnu/:/home/adam/Downloads/squashfs-root/lib/aarch64-linux-gnu/:/home/adam/Downloads/squashfs-root/lib32/:/home/adam/Downloads/squashfs-root/lib64/:/usr/local/cuda-12.8/lib64:
Executing: /home/adam/repos/vectordb-cli/target/release/vectordb-mcp
[2m2025-04-30T09:53:23.447091Z[0m [32m INFO[0m [2mvectordb_mcp[0m[2m:[0m Starting vectordb-mcp server...
[2m2025-04-30T09:53:23.447092Z[0m [32m INFO[0m [2mvectordb_mcp[0m[2m:[0m Starting vectordb-mcp server...
[2m2025-04-30T09:53:23.449448Z[0m [32m INFO[0m [2mvectordb_mcp[0m[2m:[0m Using configuration: AppConfig { qdrant_url: "http://localhost:6334", onnx_model_path: Some("/home/adam/repos/vectordb-cli/onnx/all-minilm-l6-v2.onnx"), onnx_tokenizer_path: Some("/home/adam/repos/vectordb-cli/onnx"), server_api_key_path: None, repositories: [RepositoryConfig { name: "gitlab", url: "https://gitlab.com/gitlab-org/gitlab.git", local_path: "/home/adam/repos/gitlab", default_branch: "master", tracked_branches: ["master"], remote_name: Some("origin"), last_synced_commits: {"master": "30cd6957e13996b861a3a5f99887adf5605a069f"}, active_branch: Some("master"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "go", "javascript", "markdown", "python", "ruby", "typescript", "yaml"]), added_as_local_path: true, target_ref: None }, RepositoryConfig { name: "charts", url: "git@gitlab.com:gitlab-org/charts/gitlab.git", local_path: "/home/adam/repos/charts/", default_branch: "master", tracked_branches: ["master"], remote_name: Some("origin"), last_synced_commits: {"master": "6f1495aa9f0a392d22311ad5573ec19d891157bc"}, active_branch: Some("master"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "markdown", "ruby", "yaml"]), added_as_local_path: true, target_ref: None }, RepositoryConfig { name: "langchain", url: "https://github.com/langchain-ai/langchain", local_path: "/home/adam/repos/langchain", default_branch: "master", tracked_branches: ["master"], remote_name: Some("origin"), last_synced_commits: {"f14bcee5250f74504f7fedeec53377befd4aea1f": "f14bcee5250f74504f7fedeec53377befd4aea1f"}, active_branch: Some("f14bcee5250f74504f7fedeec53377befd4aea1f"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["markdown", "python"]), added_as_local_path: false, target_ref: None }, RepositoryConfig { name: "spoon_knife_am3JNg", url: "https://github.com/octocat/Spoon-Knife.git", local_path: "Spoon-Knife", default_branch: "main", tracked_branches: ["main"], remote_name: Some("origin"), last_synced_commits: {"main": "beffdb0def9eed7b1d1569e8fb8230786f122059"}, active_branch: Some("main"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "markdown", "python"]), added_as_local_path: true, target_ref: None }, RepositoryConfig { name: "e2e-query-rustbook", url: "https://github.com/rust-lang/book", local_path: "/home/adam/repos/e2e-query-rustbook", default_branch: "main", tracked_branches: ["main"], remote_name: Some("origin"), last_synced_commits: {"main": "d33916341d480caede1d0ae57cbeae23aab23e88"}, active_branch: Some("main"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "javascript", "markdown", "rust", "yaml"]), added_as_local_path: false, target_ref: None }, RepositoryConfig { name: "e2e-query-flask", url: "https://github.com/pallets/flask", local_path: "/home/adam/repos/e2e-query-flask", default_branch: "main", tracked_branches: ["main"], remote_name: Some("origin"), last_synced_commits: {"main": "b78b5a210bde49e7e04b62a2a4f453ca10e0048c"}, active_branch: Some("main"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "markdown", "python", "yaml"]), added_as_local_path: false, target_ref: None }, RepositoryConfig { name: "e2e-query-gin", url: "https://github.com/gin-gonic/gin", local_path: "/home/adam/repos/e2e-query-gin", default_branch: "master", tracked_branches: ["master"], remote_name: Some("origin"), last_synced_commits: {"master": "67c9d4ee110e9adfe33063ef847dba56717c148a"}, active_branch: Some("master"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "go", "markdown", "yaml"]), added_as_local_path: false, target_ref: None }, RepositoryConfig { name: "e2e-query-tsnode", url: "https://github.com/microsoft/TypeScript-Node-Starter", local_path: "/home/adam/repos/e2e-query-tsnode", default_branch: "master", tracked_branches: ["master"], remote_name: Some("origin"), last_synced_commits: {"master": "1e15e8b4bf6136ee181a8d46ccda9d5b3ed4e479"}, active_branch: Some("master"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "javascript", "markdown", "typescript", "yaml"]), added_as_local_path: false, target_ref: None }, RepositoryConfig { name: "e2e-query-sinatra", url: "https://github.com/sinatra/sinatra", local_path: "/home/adam/repos/e2e-query-sinatra", default_branch: "main", tracked_branches: ["main"], remote_name: Some("origin"), last_synced_commits: {"main": "91cfb548c9e50a65324a9ce9e4ea5f10cd897027"}, active_branch: Some("main"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "markdown", "ruby", "yaml"]), added_as_local_path: false, target_ref: None }], active_repository: Some("spoon_knife_am3JNg"), repositories_base_path: Some("/home/adam/repos"), indexing: IndexingConfig { max_concurrent_upserts: 32 } }
[2m2025-04-30T09:53:23.449451Z[0m [32m INFO[0m [2mvectordb_mcp[0m[2m:[0m Using configuration: AppConfig { qdrant_url: "http://localhost:6334", onnx_model_path: Some("/home/adam/repos/vectordb-cli/onnx/all-minilm-l6-v2.onnx"), onnx_tokenizer_path: Some("/home/adam/repos/vectordb-cli/onnx"), server_api_key_path: None, repositories: [RepositoryConfig { name: "gitlab", url: "https://gitlab.com/gitlab-org/gitlab.git", local_path: "/home/adam/repos/gitlab", default_branch: "master", tracked_branches: ["master"], remote_name: Some("origin"), last_synced_commits: {"master": "30cd6957e13996b861a3a5f99887adf5605a069f"}, active_branch: Some("master"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "go", "javascript", "markdown", "python", "ruby", "typescript", "yaml"]), added_as_local_path: true, target_ref: None }, RepositoryConfig { name: "charts", url: "git@gitlab.com:gitlab-org/charts/gitlab.git", local_path: "/home/adam/repos/charts/", default_branch: "master", tracked_branches: ["master"], remote_name: Some("origin"), last_synced_commits: {"master": "6f1495aa9f0a392d22311ad5573ec19d891157bc"}, active_branch: Some("master"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "markdown", "ruby", "yaml"]), added_as_local_path: true, target_ref: None }, RepositoryConfig { name: "langchain", url: "https://github.com/langchain-ai/langchain", local_path: "/home/adam/repos/langchain", default_branch: "master", tracked_branches: ["master"], remote_name: Some("origin"), last_synced_commits: {"f14bcee5250f74504f7fedeec53377befd4aea1f": "f14bcee5250f74504f7fedeec53377befd4aea1f"}, active_branch: Some("f14bcee5250f74504f7fedeec53377befd4aea1f"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["markdown", "python"]), added_as_local_path: false, target_ref: None }, RepositoryConfig { name: "spoon_knife_am3JNg", url: "https://github.com/octocat/Spoon-Knife.git", local_path: "Spoon-Knife", default_branch: "main", tracked_branches: ["main"], remote_name: Some("origin"), last_synced_commits: {"main": "beffdb0def9eed7b1d1569e8fb8230786f122059"}, active_branch: Some("main"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "markdown", "python"]), added_as_local_path: true, target_ref: None }, RepositoryConfig { name: "e2e-query-rustbook", url: "https://github.com/rust-lang/book", local_path: "/home/adam/repos/e2e-query-rustbook", default_branch: "main", tracked_branches: ["main"], remote_name: Some("origin"), last_synced_commits: {"main": "d33916341d480caede1d0ae57cbeae23aab23e88"}, active_branch: Some("main"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "javascript", "markdown", "rust", "yaml"]), added_as_local_path: false, target_ref: None }, RepositoryConfig { name: "e2e-query-flask", url: "https://github.com/pallets/flask", local_path: "/home/adam/repos/e2e-query-flask", default_branch: "main", tracked_branches: ["main"], remote_name: Some("origin"), last_synced_commits: {"main": "b78b5a210bde49e7e04b62a2a4f453ca10e0048c"}, active_branch: Some("main"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "markdown", "python", "yaml"]), added_as_local_path: false, target_ref: None }, RepositoryConfig { name: "e2e-query-gin", url: "https://github.com/gin-gonic/gin", local_path: "/home/adam/repos/e2e-query-gin", default_branch: "master", tracked_branches: ["master"], remote_name: Some("origin"), last_synced_commits: {"master": "67c9d4ee110e9adfe33063ef847dba56717c148a"}, active_branch: Some("master"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "go", "markdown", "yaml"]), added_as_local_path: false, target_ref: None }, RepositoryConfig { name: "e2e-query-tsnode", url: "https://github.com/microsoft/TypeScript-Node-Starter", local_path: "/home/adam/repos/e2e-query-tsnode", default_branch: "master", tracked_branches: ["master"], remote_name: Some("origin"), last_synced_commits: {"master": "1e15e8b4bf6136ee181a8d46ccda9d5b3ed4e479"}, active_branch: Some("master"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "javascript", "markdown", "typescript", "yaml"]), added_as_local_path: false, target_ref: None }, RepositoryConfig { name: "e2e-query-sinatra", url: "https://github.com/sinatra/sinatra", local_path: "/home/adam/repos/e2e-query-sinatra", default_branch: "main", tracked_branches: ["main"], remote_name: Some("origin"), last_synced_commits: {"main": "91cfb548c9e50a65324a9ce9e4ea5f10cd897027"}, active_branch: Some("main"), ssh_key_path: None, ssh_key_passphrase: None, indexed_languages: Some(["fallback", "markdown", "ruby", "yaml"]), added_as_local_path: false, target_ref: None }], active_repository: Some("spoon_knife_am3JNg"), repositories_base_path: Some("/home/adam/repos"), indexing: IndexingConfig { max_concurrent_upserts: 32 } }
[2m2025-04-30T09:53:23.453160Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Qdrant connection successful.
[2m2025-04-30T09:53:23.453169Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Qdrant connection successful.
[2m2025-04-30T09:53:24.238290Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Embedding handler initialized with type: ONNX
[2m2025-04-30T09:53:24.238311Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Embedding dimension: 384
[2m2025-04-30T09:53:24.238314Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m MCP server reading from stdin and writing to stdout.
[2m2025-04-30T09:53:24.238411Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Received request [3mrequest[0m[2m=[0m{"method":"initialize","params":{"protocolVersion":"2024-11-05","capabilities":{"tools":true,"prompts":false,"resources":true,"logging":false,"roots":{"listChanged":false}},"clientInfo":{"name":"cursor-vscode","version":"1.0.0"}},"jsonrpc":"2.0","id":0}
[2m2025-04-30T09:53:24.238545Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Sending response [3mresponse[0m[2m=[0m{"jsonrpc":"2.0","result":{"capabilities":{"tools":{"ping":{"annotations":{"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"Ping Server"},"description":"Checks if the server is responsive.","inputSchema":{"properties":{},"type":"object"},"name":"ping"},"query":{"annotations":{"destructiveHint":false,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"Query Repository"},"description":"Performs semantic search on an indexed repository.","inputSchema":{"properties":{"branchName":{"description":"Optional branch to query (defaults to active)","type":"string"},"limit":{"description":"Maximum number of results to return","type":"integer"},"queryText":{"description":"The natural language query text","type":"string"},"repositoryName":{"description":"Name of the repository to query","type":"string"}},"required":["repositoryName","queryText","limit"],"type":"object"},"name":"query"},"repository_add":{"annotations":{"destructiveHint":false,"idempotentHint":false,"openWorldHint":true,"readOnlyHint":false,"title":"Add Repository"},"description":"Clones and adds a new Git repository for indexing.","inputSchema":{"properties":{"branch":{"description":"Optional specific branch to checkout","type":"string"},"local_path":{"description":"Optional path to a pre-existing local repository","type":"string"},"name":{"description":"Unique name for the repository","type":"string"},"ssh_key":{"description":"Optional path to SSH private key for cloning","type":"string"},"ssh_passphrase":{"description":"Optional passphrase for the SSH key","type":"string"},"url":{"description":"Remote Git URL (e.g., HTTPS or SSH)","type":"string"}},"required":["name"],"type":"object"},"name":"repository_add"},"repository_list":{"annotations":{"destructiveHint":false,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"List Repositories"},"description":"Lists currently configured repositories.","inputSchema":{"properties":{},"type":"object"},"name":"repository_list"},"repository_remove":{"annotations":{"destructiveHint":true,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":false,"title":"Remove Repository"},"description":"Removes a repository configuration and deletes its data.","inputSchema":{"properties":{"name":{"description":"Name of the repository to remove","type":"string"}},"required":["name"],"type":"object"},"name":"repository_remove"},"repository_sync":{"annotations":{"destructiveHint":false,"idempotentHint":false,"openWorldHint":true,"readOnlyHint":false,"title":"Sync Repository"},"description":"Fetches latest changes, updates local copy, and re-indexes a repository.","inputSchema":{"properties":{"name":{"description":"Name of the repository to sync","type":"string"}},"required":["name"],"type":"object"},"name":"repository_sync"}}},"protocolVersion":"2024-11-05","serverInfo":{"name":"vectordb-mcp","version":"0.1.0"}},"id":0}
[2m2025-04-30T09:53:24.239831Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Embedding handler initialized with type: ONNX
[2m2025-04-30T09:53:24.239849Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Embedding dimension: 384
[2m2025-04-30T09:53:24.239854Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m MCP server reading from stdin and writing to stdout.
[2m2025-04-30T09:53:24.239945Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Received request [3mrequest[0m[2m=[0m{"method":"initialize","params":{"protocolVersion":"2024-11-05","capabilities":{"tools":true,"prompts":false,"resources":true,"logging":false,"roots":{"listChanged":false}},"clientInfo":{"name":"cursor-vscode","version":"1.0.0"}},"jsonrpc":"2.0","id":0}
[2m2025-04-30T09:53:24.240048Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Sending response [3mresponse[0m[2m=[0m{"jsonrpc":"2.0","result":{"capabilities":{"tools":{"ping":{"annotations":{"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"Ping Server"},"description":"Checks if the server is responsive.","inputSchema":{"properties":{},"type":"object"},"name":"ping"},"query":{"annotations":{"destructiveHint":false,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"Query Repository"},"description":"Performs semantic search on an indexed repository.","inputSchema":{"properties":{"branchName":{"description":"Optional branch to query (defaults to active)","type":"string"},"limit":{"description":"Maximum number of results to return","type":"integer"},"queryText":{"description":"The natural language query text","type":"string"},"repositoryName":{"description":"Name of the repository to query","type":"string"}},"required":["repositoryName","queryText","limit"],"type":"object"},"name":"query"},"repository_add":{"annotations":{"destructiveHint":false,"idempotentHint":false,"openWorldHint":true,"readOnlyHint":false,"title":"Add Repository"},"description":"Clones and adds a new Git repository for indexing.","inputSchema":{"properties":{"branch":{"description":"Optional specific branch to checkout","type":"string"},"local_path":{"description":"Optional path to a pre-existing local repository","type":"string"},"name":{"description":"Unique name for the repository","type":"string"},"ssh_key":{"description":"Optional path to SSH private key for cloning","type":"string"},"ssh_passphrase":{"description":"Optional passphrase for the SSH key","type":"string"},"url":{"description":"Remote Git URL (e.g., HTTPS or SSH)","type":"string"}},"required":["name"],"type":"object"},"name":"repository_add"},"repository_list":{"annotations":{"destructiveHint":false,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"List Repositories"},"description":"Lists currently configured repositories.","inputSchema":{"properties":{},"type":"object"},"name":"repository_list"},"repository_remove":{"annotations":{"destructiveHint":true,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":false,"title":"Remove Repository"},"description":"Removes a repository configuration and deletes its data.","inputSchema":{"properties":{"name":{"description":"Name of the repository to remove","type":"string"}},"required":["name"],"type":"object"},"name":"repository_remove"},"repository_sync":{"annotations":{"destructiveHint":false,"idempotentHint":false,"openWorldHint":true,"readOnlyHint":false,"title":"Sync Repository"},"description":"Fetches latest changes, updates local copy, and re-indexes a repository.","inputSchema":{"properties":{"name":{"description":"Name of the repository to sync","type":"string"}},"required":["name"],"type":"object"},"name":"repository_sync"}}},"protocolVersion":"2024-11-05","serverInfo":{"name":"vectordb-mcp","version":"0.1.0"}},"id":0}
[2m2025-04-30T09:53:24.240693Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Received request [3mrequest[0m[2m=[0m{"method":"notifications/initialized","jsonrpc":"2.0"}
[2m2025-04-30T09:53:24.240719Z[0m [32m INFO[0m [1mhandle_request[0m[1m{[0m[3mrequest[0m[2m=[0mRequest { jsonrpc: "2.0", method: "notifications/initialized", params: None, id: None } [3mrequest_id[0m[2m=[0mNone [3mmethod[0m[2m=[0mnotifications/initialized[1m}[0m[2m:[0m [2mvectordb_mcp::server[0m[2m:[0m Received initialized notification
[2m2025-04-30T09:53:24.241193Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Received request [3mrequest[0m[2m=[0m{"method":"notifications/initialized","jsonrpc":"2.0"}
[2m2025-04-30T09:53:24.241218Z[0m [32m INFO[0m [1mhandle_request[0m[1m{[0m[3mrequest[0m[2m=[0mRequest { jsonrpc: "2.0", method: "notifications/initialized", params: None, id: None } [3mrequest_id[0m[2m=[0mNone [3mmethod[0m[2m=[0mnotifications/initialized[1m}[0m[2m:[0m [2mvectordb_mcp::server[0m[2m:[0m Received initialized notification
[2m2025-04-30T09:53:24.242394Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Received request [3mrequest[0m[2m=[0m{"method":"tools/list","jsonrpc":"2.0","id":1}
[2m2025-04-30T09:53:24.242444Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Stdin closed, shutting down.
[2m2025-04-30T09:53:24.242494Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Sending response [3mresponse[0m[2m=[0m{"jsonrpc":"2.0","result":{"tools":[{"annotations":{"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"Ping Server"},"description":"Checks if the server is responsive.","inputSchema":{"properties":{},"type":"object"},"name":"ping"},{"annotations":{"destructiveHint":false,"idempotentHint":false,"openWorldHint":true,"readOnlyHint":false,"title":"Add Repository"},"description":"Clones and adds a new Git repository for indexing.","inputSchema":{"properties":{"branch":{"description":"Optional specific branch to checkout","type":"string"},"local_path":{"description":"Optional path to a pre-existing local repository","type":"string"},"name":{"description":"Unique name for the repository","type":"string"},"ssh_key":{"description":"Optional path to SSH private key for cloning","type":"string"},"ssh_passphrase":{"description":"Optional passphrase for the SSH key","type":"string"},"url":{"description":"Remote Git URL (e.g., HTTPS or SSH)","type":"string"}},"required":["name"],"type":"object"},"name":"repository_add"},{"annotations":{"destructiveHint":false,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"List Repositories"},"description":"Lists currently configured repositories.","inputSchema":{"properties":{},"type":"object"},"name":"repository_list"},{"annotations":{"destructiveHint":true,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":false,"title":"Remove Repository"},"description":"Removes a repository configuration and deletes its data.","inputSchema":{"properties":{"name":{"description":"Name of the repository to remove","type":"string"}},"required":["name"],"type":"object"},"name":"repository_remove"},{"annotations":{"destructiveHint":false,"idempotentHint":false,"openWorldHint":true,"readOnlyHint":false,"title":"Sync Repository"},"description":"Fetches latest changes, updates local copy, and re-indexes a repository.","inputSchema":{"properties":{"name":{"description":"Name of the repository to sync","type":"string"}},"required":["name"],"type":"object"},"name":"repository_sync"},{"annotations":{"destructiveHint":false,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"Query Repository"},"description":"Performs semantic search on an indexed repository.","inputSchema":{"properties":{"branchName":{"description":"Optional branch to query (defaults to active)","type":"string"},"limit":{"description":"Maximum number of results to return","type":"integer"},"queryText":{"description":"The natural language query text","type":"string"},"repositoryName":{"description":"Name of the repository to query","type":"string"}},"required":["repositoryName","queryText","limit"],"type":"object"},"name":"query"}]},"id":1}
[2m2025-04-30T09:53:24.242741Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Received request [3mrequest[0m[2m=[0m{"method":"tools/list","jsonrpc":"2.0","id":2}
[2m2025-04-30T09:53:24.242808Z[0m [32m INFO[0m [2mvectordb_mcp::server[0m[2m:[0m Sending response [3mresponse[0m[2m=[0m{"jsonrpc":"2.0","result":{"tools":[{"annotations":{"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"Ping Server"},"description":"Checks if the server is responsive.","inputSchema":{"properties":{},"type":"object"},"name":"ping"},{"annotations":{"destructiveHint":false,"idempotentHint":false,"openWorldHint":true,"readOnlyHint":false,"title":"Add Repository"},"description":"Clones and adds a new Git repository for indexing.","inputSchema":{"properties":{"branch":{"description":"Optional specific branch to checkout","type":"string"},"local_path":{"description":"Optional path to a pre-existing local repository","type":"string"},"name":{"description":"Unique name for the repository","type":"string"},"ssh_key":{"description":"Optional path to SSH private key for cloning","type":"string"},"ssh_passphrase":{"description":"Optional passphrase for the SSH key","type":"string"},"url":{"description":"Remote Git URL (e.g., HTTPS or SSH)","type":"string"}},"required":["name"],"type":"object"},"name":"repository_add"},{"annotations":{"destructiveHint":false,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"List Repositories"},"description":"Lists currently configured repositories.","inputSchema":{"properties":{},"type":"object"},"name":"repository_list"},{"annotations":{"destructiveHint":true,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":false,"title":"Remove Repository"},"description":"Removes a repository configuration and deletes its data.","inputSchema":{"properties":{"name":{"description":"Name of the repository to remove","type":"string"}},"required":["name"],"type":"object"},"name":"repository_remove"},{"annotations":{"destructiveHint":false,"idempotentHint":false,"openWorldHint":true,"readOnlyHint":false,"title":"Sync Repository"},"description":"Fetches latest changes, updates local copy, and re-indexes a repository.","inputSchema":{"properties":{"name":{"description":"Name of the repository to sync","type":"string"}},"required":["name"],"type":"object"},"name":"repository_sync"},{"annotations":{"destructiveHint":false,"idempotentHint":true,"openWorldHint":false,"readOnlyHint":true,"title":"Query Repository"},"description":"Performs semantic search on an indexed repository.","inputSchema":{"properties":{"branchName":{"description":"Optional branch to query (defaults to active)","type":"string"},"limit":{"description":"Maximum number of results to return","type":"integer"},"queryText":{"description":"The natural language query text","type":"string"},"repositoryName":{"description":"Name of the repository to query","type":"string"}},"required":["repositoryName","queryText","limit"],"type":"object"},"name":"query"}]},"id":2}
